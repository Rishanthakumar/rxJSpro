import {Observable} from 'rxjs';

let output = document.getElementById('output');
let button = document.getElementById('button');

let click = Observable.fromEvent(button, 'click');

function load(url: string) {
    return Observable.create(observer => {
        let xhr = new XMLHttpRequest();

        xhr.addEventListener('load', () => {
            let data = JSON.parse(xhr.responseText);
            observer.next(data);
            observer.complete();
        });

        xhr.open("GET", url);
        xhr.send();
    });
}

function renderMovies(movies) {
    movies.forEach(m => {
        let div = document.createElement('div');
        div.innerText = m.title;
        output.appendChild(div);
    });
}
//
//  using map you map the observable to one and another observable.
// click.map(e => load('movies.json'))
//     .subscribe(o => console.log(o));
//
//flat map will subscribe to the observable and deliver the final output.
// click.flatMap(e => load('movies.json'))
//     .subscribe(o => console.log(o));

click.flatMap(e => load('movies.json'))
    .subscribe(
    renderMovies,
    e => console.log(`error: ${e}`),
    () => console.log('complete')
);
